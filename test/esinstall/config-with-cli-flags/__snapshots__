// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`config-with-cli-flags matches the snapshot: allFiles 1`] = `
Array [
  "import-map.json",
  "shallow-equal.js",
]
`;

exports[`config-with-cli-flags matches the snapshot: cli output 1`] = `
"[snowpack] ! installing dependencies...
[snowpack] ✔ install complete!
[snowpack]
  ⦿ web_modules/         size       gzip       brotli
    └─ shallow-equal.js    XXXX KB    XXXX KB    XXXX KB"
`;

exports[`config-with-cli-flags matches the snapshot: web_modules/import-map.json 1`] = `
"{
  \\"imports\\": {
    \\"shallow-equal\\": \\"./shallow-equal.js\\"
  }
}"
`;

exports[`config-with-cli-flags matches the snapshot: web_modules/shallow-equal.js 1`] = `
"function shallowEqualObjects(objA, objB) {
  if (objA === objB) {
    return true;
  }
  if (!objA || !objB) {
    return false;
  }
  var aKeys = Object.keys(objA);
  var bKeys = Object.keys(objB);
  var len = aKeys.length;
  if (bKeys.length !== len) {
    return false;
  }
  for (var i = 0; i < len; i++) {
    var key = aKeys[i];
    if (objA[key] !== objB[key] || !Object.prototype.hasOwnProperty.call(objB, key)) {
      return false;
    }
  }
  return true;
}
function shallowEqualArrays(arrA, arrB) {
  if (arrA === arrB) {
    return true;
  }
  if (!arrA || !arrB) {
    return false;
  }
  var len = arrA.length;
  if (arrB.length !== len) {
    return false;
  }
  for (var i = 0; i < len; i++) {
    if (arrA[i] !== arrB[i]) {
      return false;
    }
  }
  return true;
}
export { shallowEqualArrays, shallowEqualObjects };"
`;
